pipeline {
    agent any

    environment {
        scannerHome = tool 'SonarScanner'
    }

    stages {
        stage('Run Sonarqube') {
            steps {
                withSonarQubeEnv('SonarQube installation') {
                    sh "${scannerHome}/bin/sonar-scanner \
                    -Dsonar.projectKey=test \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=http://34.170.88.42:9000 \
                    -Dsonar.login=squ_e06b5f2551b7a86434027b57f5fc56214644fd1c"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script{
                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
                echo 'Quality Gate Passed'
            }
        }
    }

    post {
        failure {
            echo "Pipeline failed."
        }
        success {
            echo "Pipeline succeeded."
        }
        always {
            cleanWs() // 清理工作区
        }
    }
}
